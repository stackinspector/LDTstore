# NGINX Config for LDTstore main domains Rev 0.1.0
# Copyright 2021-2024 stackinspector. MIT Lincese.

user www-data;
pcre_jit on;
worker_processes auto;
error_log /server/nginx/logs/error debug;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

events {}

http {
    # generated from the following argument list string and JavaScript code
    # 'time_iso8601  server_name  remote_addr remote_user  request http_referer http_user_agent http_accept http_x_forwarded_for http_cookie  status bytes_sent body_bytes_sent  connection connection_requests'
    # `log_format json_detailed escape=json '{` + args.replace(/  /g, ' ').split(' ').map(arg => `"${arg}":"$${arg}"`).join(`,`) + `}';`
    log_format json_detailed escape=json '{"time_iso8601":"$time_iso8601","server_name":"$server_name","remote_addr":"$remote_addr","remote_user":"$remote_user","request":"$request","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_accept":"$http_accept","http_x_forwarded_for":"$http_x_forwarded_for","http_cookie":"$http_cookie","status":"$status","bytes_sent":"$bytes_sent","body_bytes_sent":"$body_bytes_sent","connection":"$connection","connection_requests":"$connection_requests"}';
    access_log /server/nginx/logs/access json_detailed;

    # content type
    charset utf-8;
    include /etc/nginx/mime.types;

    # performance optimizations
    sendfile on;
    tcp_nopush on;

    # compress
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # traffic limit zones
    limit_req_zone $binary_remote_addr zone=redirect:128m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=static:128m rate=100r/s;
    limit_req_status 444;

    # tls

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m; # about 40000 sessions
    ssl_session_tickets off;

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;

    # for mainland server
    resolver 119.29.29.29;

    # deny requests not from CDN
    allow 127.0.0.1;
    allow ::1;
    include /server/certs/cdn-ip-allow-list.conf;
    deny all;

    # deny requests with no/wrong server_name

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        return 444;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        ssl_reject_handshake on;
    }

    # services

    server {
        listen 54300 ssl http2;
        listen [::]:54300 ssl http2;
        server_name s0.ldt.pc.wiki;
        include /server/nginx/cert-ldtstore-main.conf;
        include /server/nginx/static.conf;
        add_header Access-Control-Allow-Origin *;
        root /static/s0-ldt;
    }

    server {
        listen 54301 ssl http2;
        listen [::]:54301 ssl http2;
        server_name ldt.pc.wiki;
        include /server/nginx/cert-ldtstore-main.conf;
        include /server/nginx/static.conf;
        root /static/ldt;
    }

    server {
        listen 54302 ssl http2;
        listen [::]:54302 ssl http2;
        server_name tool.pc.wiki;
        include /server/nginx/cert-ldtstore-main.conf;
        include /server/nginx/static.conf;
        root /static/tool;
    }

    server {
        listen 54303 ssl http2;
        listen [::]:54303 ssl http2;
        server_name d1.tool.pc.wiki;
        include /server/nginx/cert-ldtstore-main.conf;
        include /server/nginx/static.conf;
        root /static/d1-tool;
    }

    server {
        listen 54310 ssl http2;
        listen [::]:54310 ssl http2;
        server_name r.ldt.pc.wiki;
        include /server/nginx/cert-ldtstore-main.conf;
        include /server/nginx/redirect.conf;
        location / {
            proxy_buffering off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:38010/;
        }
    }

    # reserved for dynamic extends

    include /server/nginx-extends/extends.conf;
}
